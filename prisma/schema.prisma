// - user -> fw_user_id
// - token
// - log user
// - sms

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum OptionType {
    SMS
    FEED
}

enum TokenType {
    ACCESS
    REFRESH
    RESET_PASSWORD
    VERIFY_EMAIL
}

enum UserType {
    AD
    LOCAL
}

model User {
    UserID     String   @id() @default(uuid()) @db.Uuid
    FW_USER_ID String
    Username   String?  @unique() @db.VarChar(255)
    Email      String?  @unique() @db.VarChar(255)
    Password   String?  @db.VarChar(255)
    FirstName  String   @default("member") @db.VarChar(255)
    LastName   String?  @db.VarChar(255)
    Tel        String?  @db.VarChar(20)
    Role       Int      @db.SmallInt
    UserType   UserType
    CreatedAt  DateTime @default(now())
    UpdatedAt  DateTime @updatedAt()

    Token      Token[]      @relation(name: "Token")
    SMS        SMS[]        @relation(name: "SMS")
    Attachment Attachment[] @relation(name: "Attachment")
}

model Attachment {
    AttachmentID String   @id @default(uuid()) @db.Uuid
    UserID       String   @db.Uuid
    FileKey      String   @db.VarChar(255)
    FileName     String   @db.VarChar(255)
    FileSize     String   @db.VarChar(255)
    Extension    String   @db.VarChar(255)
    Mimetype     String?  @db.VarChar(255)
    FullPath     String?
    Type         String?
    CreatedBy    String   @db.Uuid
    CreatedAt    DateTime @default(now())
    UpdatedAt    DateTime @updatedAt()

    User User? @relation(name: "Attachment", fields: [UserID], references: [UserID])
}

model Token {
    ID                     String    @id() @default(uuid()) @db.Uuid
    Type                   TokenType
    IP                     String?   @db.VarChar(50)
    Device                 String?   @db.VarChar(255)
    Latitude               String?   @db.VarChar(100)
    Longitude              String?   @db.VarChar(100)
    Token                  String    @unique()
    RefreshToken           String?   @unique()
    Expiration             DateTime
    ExpirationRefreshToken DateTime?
    CreatedBy              String?   @db.Uuid
    CreatedAt              DateTime  @default(now())
    UpdatedAt              DateTime  @updatedAt()

    User User? @relation(name: "Token", fields: [CreatedBy], references: [UserID])
}

model UserLog {
    LogID      String   @id @default(uuid()) @db.Uuid
    Action     String   @db.VarChar(255)
    Message    String
    MessageOld String?
    CreatedBy  String   @db.Uuid
    CreatedAt  DateTime @default(now())
}

model SMS {
    SMSID        String     @id @default(uuid()) @db.Uuid
    Sender       String
    To           String
    Contact      String?
    ScheduleDate String?
    Option       OptionType @default(SMS)
    MessageText  String
    Characters   Int
    Result       Json?
    CreatedBy    String     @db.Uuid
    Remove       Boolean    @default(false)
    Destroy      DateTime?
    CreatedAt    DateTime   @default(now())
    UpdatedAt    DateTime   @updatedAt

    User User? @relation(name: "SMS", fields: [CreatedBy], references: [UserID])
}
